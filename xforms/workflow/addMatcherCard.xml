<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="xsltforms/xsltforms.xsl" type="text/xsl"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events"
  xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<xf:model id="xformId_mainModel">
			<xf:instance id="xformId_mainInstance">
				<schema xmlns=""/>
			</xf:instance>
			<xf:instance id="xformId_groupInstance">
				<schema xmlns="">
					<group>
						<name/>
						<id/>
						<isDynamic>false</isDynamic>
					</group>
				</schema>
			</xf:instance>
			<xf:instance id="xformId_userInstance">
				<schema xmlns="">
					<user>
						<name/>
						<id/>
						<isDynamic>false</isDynamic>
					</user>
				</schema>
			</xf:instance>
			<xf:bind>
				<xf:bind nodeset="instance('xformId_mainInstance')/data/@isParallel" type="boolean" />
				<xf:bind nodeset="instance('xformId_mainInstance')/data/@isDynamic" type="boolean" />
				<xf:bind nodeset="instance('xformId_mainInstance')/data/@name" required="instance('xformId_mainInstance')/data/@isParallel='false'"/>
				<xf:bind nodeset="instance('xformId_mainInstance')/data/@taskKey" required="instance('xformId_mainInstance')/data/@isParallel='false'"/>
				<xf:bind nodeset="instance('xformId_mainInstance')/data/@assigneeName"
						 readonly="instance('xformId_mainInstance')/data/@isParallel='false'"
						 required="instance('xformId_mainInstance')/data/@isParallel='false' 
									and instance('xformId_mainInstance')/data/@isDynamic='false'
									and (count(../groups/group)=0 and count(../users/user)=0)"/>
				<xf:bind nodeset="instance('xformId_mainInstance')/data/groups/group/name" readonly="true()" />
				<xf:bind nodeset="instance('xformId_mainInstance')/data/users/user/name" readonly="true()" />
				<xf:bind nodeset="instance('xformId_mainInstance')/data/groups/group/id" required="true()" />
				<xf:bind nodeset="instance('xformId_mainInstance')/data/users/user/id" required="true()"/>
				<xf:bind nodeset="instance('xformId_mainInstance')/data/groups/group/isDynamic" type="boolean" />
				<xf:bind nodeset="instance('xformId_mainInstance')/data/users/user/isDynamic" type="boolean" />
				<!-- <xf:bind nodeset="instance('xformId_mainInstance')/data/@assignee" required="instance('xformId_mainInstance')/data/@isParallel='false'"/> -->
			</xf:bind>
		</xf:model>
	</head>
	<body>
		<!-- <xf:output value="serialize(instance('xformId_mainInstance'))"/>     -->
		<xf:group ref = "instance('xformId_mainInstance')/data[./@add='add']">
			<div class = "baseInput200 break" >
				<xf:output ref="instance('xformId_mainInstance')/data/@parentName">
					<xf:label>Родительский элемент:</xf:label>
				</xf:output>
			</div>
		</xf:group>
		<xf:group ref = "instance('xformId_mainInstance')/data[./@add='add' and ./@parallel='false']">
			<div class = "boolInput200 break" >
				<xf:input ref="instance('xformId_mainInstance')/data/@isParallel">
					<xf:label>Параллельное согласование</xf:label>
				</xf:input>
			</div>
		</xf:group>
		<xf:group ref = "instance('xformId_mainInstance')/data[./@isParallel='false']">

			<div class = "baseInput200 break" >
				<xf:input ref="instance('xformId_mainInstance')/data/@name">
					<xf:label>Название:</xf:label>
				</xf:input>
			</div>
			<div class = "baseInput200 break" >
				<xf:input ref="instance('xformId_mainInstance')/data/@taskKey">
					<xf:label>Ключ задачи:</xf:label>
				</xf:input>
			</div>
			<!-- 			<div class = "baseInput200 break">
				<xf:input ref="instance('xformId_mainInstance')/data/@statusName">
					<xf:label>Статус:</xf:label>
				</xf:input>
			</div>
			<div class = "selectorLong200" >

					<xf:input ref="instance('xformId_mainInstance')/data/@varName">
						<xf:label>Переменная:</xf:label>
					</xf:input>
					<xf:selector buttonLabel="..." procListAndCount="'workflow.xforms.addMatcher.statusListAndCount.celesta'"
						generalFilters="['XPath(instance(quot(xformId_mainInstance))/data)']"
						currentValue="''" windowCaption="'Выбор процесса'"
						xpathMapping="{
							'XPath(instance(quot(xformId_mainInstance))/data/@statusName)' : 'name',
							'XPath(instance(quot(xformId_mainInstance))/data/@statusId)' : 'id',
							'XPath(instance(quot(xformId_mainInstance))/data/@varName)' : 'varName'}"/>
						<xf:trigger>
							<xf:label>X</xf:label>
							<xf:action ev:event="DOMActivate">
								<xf:setvalue ref="instance('xformId_mainInstance')/data/@statusName" value=""/>  
								<xf:setvalue ref="instance('xformId_mainInstance')/data/@statusId" value=""/>  
								<xf:setvalue ref="instance('xformId_mainInstance')/data/@varName" value=""/> 
							</xf:action>
						</xf:trigger>
			</div> -->
			<hr style="margin-top:21px; margin-bottom: 10px; width: 100%;  float: left; clear: both;"/>

			<div class = "boolInput200 break" >
				<xf:input ref="instance('xformId_mainInstance')/data/@isDynamic">
					<xf:label>Задать пользователя динамически</xf:label>
				</xf:input>
			</div>
			<xf:group ref = "instance('xformId_mainInstance')/data[./@isDynamic='false']">
				<div class = "selectorLong400 break" >
					<xf:input ref="instance('xformId_mainInstance')/data/@assigneeName">
						<xf:label>Ответственный за задачу:</xf:label>
					</xf:input>
					<xf:trigger>
						<xf:label>...</xf:label>
						<xf:action ev:event="DOMActivate">
							<xf:load
									resource="javascript:gwtCreatePlugin
								({
									id:'xformId',
									plugin:'extJsTree',
									getDataProcName:'workflow.xforms.addMatcher.treeSelectorXML.celesta',
									postProcessProc:'handleExtJsTree.py',
									generalFilters: ['XPath(instance(quot(xformId_mainInstance))/data)'],
									params:
									{
										treePanel:
										{
											title: 'Сотрудники'
										},
										core:
										{
											filter:{
												startsWith:false,
												delay:900
											}
										},
										dataModel:
										{
											fields:
											[
												{name: 'type', type: 'string', devId:'string'}
											]
										},
										view:
										{
											columns:
											[
												{ header: 'Тип', dataIndex: 'type'}
											]
										}
									},
									options: 
									{								
										dataWidth: '600px',
										dataHeight: '450px',
										windowCaption: 'Выбор ответственного',
										onSelectionComplete: function(ok, plugin) {
										if (ok) {
										plugin.utils.singleXpathMapping({
											'XPath(instance(quot(xformId_mainInstance))/data/@assigneeName)':'name',
											'XPath(instance(quot(xformId_mainInstance))/data/@assignee)':'id'
										});
									}
								}
									}
								});"
								  >
							</xf:load>
						</xf:action>
					</xf:trigger>
					<xf:trigger>
						<xf:label>X</xf:label>
						<xf:action ev:event="DOMActivate">
							<xf:setvalue ref="instance('xformId_mainInstance')/data/@assignee" value=""/>  
							<xf:setvalue ref="instance('xformId_mainInstance')/data/@assigneeName" value=""/>   
						</xf:action>
					</xf:trigger>
				</div>
			</xf:group>
			<xf:group ref = "instance('xformId_mainInstance')/data[./@isDynamic='true']">
				<div class = "baseInput400 break" >
					<xf:input ref="instance('xformId_mainInstance')/data/@assignee">
						<xf:label>Ответственный за задачу:</xf:label>
					</xf:input>
				</div>
			</xf:group>
			<hr style="margin-top:21px; margin-bottom: 10px; width: 100%;  float: left; clear: both;"/>

			<div class="group break" id="candidates" style="width:550px">
				<label for="candidates" class="break">
						Кандидаты
				</label>
				<div class="group break" id="groups" style="width:500px">
					<label for="groups" class="break">
							Группы
					</label>
					<xf:group ref="instance('xformId_mainInstance')/data/groups">
						<div style="break">
							<xf:trigger>
								<xf:label>Добавить</xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:insert nodeset="group"
											origin="instance('xformId_groupInstance')/group"
											at="last()" position="after" />
								</xf:action>
							</xf:trigger>
						</div>
						<xf:repeat id="xformId_groups" nodeset="group">
							<!-- 								<div class="break">
									<div class="baseInput200">
											<xf:input ref="name">
												<xf:label>Название:</xf:label>
											</xf:input>
										
									</div>
									<div class="button30">
										<xf:trigger>
											<xf:label>X</xf:label>
											<xf:action ev:event="DOMActivate">
												<xf:delete nodeset="current()"/>
											</xf:action>
										</xf:trigger>
									</div>
								</div> -->
						<div class = "boolInput200 break" >
							<xf:input ref="isDynamic">
								<xf:label>Задать группу динамически</xf:label>
							</xf:input>

						</div>
						<xf:group ref = ".[isDynamic='false']">
							<div  class="selectorLong400 break" >

								<xf:input ref="name">
									<xf:label>Название:</xf:label>
								</xf:input>
								<xf:trigger>
									<xf:label>...</xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:load
									resource="javascript:gwtCreatePlugin
								({
									id:'xformId',
									plugin:'extJsTree',
									getDataProcName:'workflow.xforms.addMatcher.groupsListAndCount.celesta',
									postProcessProc:'handleExtJsTree.py',
									generalFilters: ['XPath(instance(quot(xformId_mainInstance))/data)'],
									params:
									{
										treePanel:
										{
											title: 'Сотрудники'
										},
										core:
										{
											filter:{
												startsWith:false,
												delay:900
											}
										},
										dataModel:
										{
											fields:
											[
												{name: 'type', type: 'string', devId:'string'}
											]
										},
										view:
										{
											columns:
											[
												{ header: 'Тип', dataIndex: 'type'}
											]
										}
									},
									options: 
									{								
										dataWidth: '600px',
										dataHeight: '450px',
										windowCaption: 'Выбор группы',
										onSelectionComplete: function(ok, plugin) {
										if (ok) {
										plugin.utils.singleXpathMapping({
											'XPath(instance(quot(xformId_mainInstance))/data/groups/group[index(quot(xformId_groups))]/name)':'name',
											'XPath(instance(quot(xformId_mainInstance))/data/groups/group[index(quot(xformId_groups))]/id)':'id'
										});
									}
								}
									}
								});"
								  >
										</xf:load>
									</xf:action>
								</xf:trigger>

								<xf:trigger>
									<xf:label>X</xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="current()"/>
									</xf:action>
								</xf:trigger>

							</div>
						</xf:group>
						<xf:group ref = ".[isDynamic='true']">
							<div class = "baseInput400" >
								<xf:input ref="id">
									<xf:label>Название:</xf:label>
								</xf:input>

							</div>
							<div class = "button30" >
								<xf:trigger>
									<xf:label>X</xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="current()"/>
									</xf:action>
								</xf:trigger>
							</div>
						</xf:group>
						</xf:repeat>
					</xf:group>
				</div>
				<div class="group break" id="users" style="width:500px">
					<label for="users" class="break">
							Пользователи
					</label>
					<xf:group ref="instance('xformId_mainInstance')/data/users">
						<div style="break">
							<xf:trigger>
								<xf:label>Добавить</xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:insert nodeset="user"
											origin="instance('xformId_userInstance')/user"
											at="last()" position="after"/>
								</xf:action>
							</xf:trigger>
						</div>
						<xf:repeat id="xformId_users" nodeset="user">
						<div class = "boolInput200 break" >
							<xf:input ref="isDynamic">
								<xf:label>Задать пользователя динамически</xf:label>
							</xf:input>
						</div>
						<xf:group ref = ".[isDynamic='false']">
							<div  class="selectorLong400 break" >
								<xf:input ref="name">
									<xf:label>Название:</xf:label>
								</xf:input>
								<xf:trigger>
									<xf:label>...</xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:load
									resource="javascript:gwtCreatePlugin
								({
									id:'xformId',
									plugin:'extJsTree',
									getDataProcName:'workflow.xforms.addMatcher.treeSelectorXML.celesta',
									postProcessProc:'handleExtJsTree.py',
									generalFilters: ['XPath(instance(quot(xformId_mainInstance))/data)'],
									params:
									{
										treePanel:
										{
											title: 'Сотрудники'
										},
										core:
										{
											filter:{
												startsWith:false,
												delay:900
											}
										},
										dataModel:
										{
											fields:
											[
												{name: 'type', type: 'string', devId:'string'}
											]
										},
										view:
										{
											columns:
											[
												{ header: 'Тип', dataIndex: 'type'}
											]
										}
									},
									options: 
									{								
										dataWidth: '600px',
										dataHeight: '450px',
										windowCaption: 'Выбор ответственного',
										onSelectionComplete: function(ok, plugin) {
										if (ok) {
										plugin.utils.singleXpathMapping({
											'XPath(instance(quot(xformId_mainInstance))/data/users/user[index(quot(xformId_users))]/name)':'name',
											'XPath(instance(quot(xformId_mainInstance))/data/users/user[index(quot(xformId_users))]/id)':'id'
										});
									}
								}
									}
								});"
								  >
										</xf:load>
									</xf:action>
								</xf:trigger>
								<xf:trigger>
									<xf:label>X</xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="current()"/>
									</xf:action>
								</xf:trigger>				
							</div>
							</xf:group>
							<xf:group ref = ".[isDynamic='true']">
								<div class = "baseInput400" >
									<xf:input ref="id">
										<xf:label>Название:</xf:label>
									</xf:input>
								</div>
								<div class = "button30" >
									<xf:trigger>
										<xf:label>X</xf:label>
										<xf:action ev:event="DOMActivate">
											<xf:delete nodeset="current()"/>
										</xf:action>
									</xf:trigger>
								</div>
							</xf:group>
						</xf:repeat>
					</xf:group>
				</div>
			</div>
		</xf:group>
		<xf:group class="break">
			<table>
				<tr>
					<td width="300px">
						<div class="button200 break">
							<xf:trigger>
								<xf:label>Сохранить</xf:label>
								<xf:action ev:event="DOMActivate" if="(is-valid(instance('xformId_mainInstance'))=true())">
									<xf:load
									resource="javascript:gwtXFormSave('xformId','1',  Writer.toString(getSubformInstanceDocument('xformId_mainModel', 'xformId_mainInstance')))"
								>
									</xf:load>
								</xf:action>
								<xf:action ev:event="DOMActivate"
										if="(is-valid(instance('xformId_mainInstance'))=false())">
									<xf:message>Заполнено с ошибкой</xf:message>
								</xf:action>
							</xf:trigger>
						</div>
					</td>
					<td>
						<div class="button200">
							<xf:trigger>
								<xf:label>Закрыть</xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:load
									resource="javascript:gwtXFormUpdate('xformId','1', null)"
								>
									</xf:load>
								</xf:action>
							</xf:trigger>
						</div>
					</td>
				</tr>
			</table>
		</xf:group>
	</body>
</html>
